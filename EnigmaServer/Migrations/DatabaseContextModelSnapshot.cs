// <auto-generated />
using System;
using EnigmaServer.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EnigmaServer.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("EnigmaLib.Model.EncryptedData", b =>
                {
                    b.Property<int>("EncryptedDataId")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("AESEncryptedData");

                    b.Property<byte[]>("RSAEncryptedAESKey")
                        .IsRequired();

                    b.HasKey("EncryptedDataId");

                    b.ToTable("EncryptedData");
                });

            modelBuilder.Entity("EnigmaLib.Model.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("GroupId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("EnigmaLib.Model.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EncryptedDataId");

                    b.Property<int>("FromUserId");

                    b.Property<int>("GroupId");

                    b.Property<int>("ToUserId");

                    b.HasKey("MessageId");

                    b.HasIndex("EncryptedDataId");

                    b.HasIndex("FromUserId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ToUserId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("EnigmaLib.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GroupId");

                    b.Property<string>("PublicKeyString")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.HasIndex("GroupId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("EnigmaLib.Model.Message", b =>
                {
                    b.HasOne("EnigmaLib.Model.EncryptedData", "EncryptedData")
                        .WithMany()
                        .HasForeignKey("EncryptedDataId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnigmaLib.Model.User", "FromUser")
                        .WithMany()
                        .HasForeignKey("FromUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnigmaLib.Model.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EnigmaLib.Model.User", "ToUser")
                        .WithMany()
                        .HasForeignKey("ToUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EnigmaLib.Model.User", b =>
                {
                    b.HasOne("EnigmaLib.Model.Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
